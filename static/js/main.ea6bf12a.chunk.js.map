{"version":3,"sources":["utils/worker.js","utils/helpers.js","utils/item.js","components/icon.js","components/item.js","components/step.js","App.js","serviceWorker.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","numToNumeral","num","levelToExperience","level","Math","pow","getEnchantmentDisplayName","enchantment_name","enchantment_data","enchantments","find","find_enchantment","display_name","getItemData","item","new_item","map","enchantment","checkEnchantmentIsCompatible","targetItem","newEnchantment","some","some_enchantment","group","group_exception","applies_to","some_item","getDisplayName","item_name","item_data","items","find_item","Icon","this","props","size","src","process","alt","width","height","React","PureComponent","smallerSelect","control","provided","state","minHeight","input","margin","indicatorsContainer","Item","filter","filtered_enchantment","value","label","onDelete","onAddEnchantment","onDeleteEnchantment","onChangeLevel","onChangePenalty","Container","Row","Col","sm","fluid","className","xs","onClick","InputGroup","Prepend","Text","FormControl","type","penalty","min","onChange","e","index","options","getPossibleEnchantmentOptions","placeholder","styles","Table","key","max","max_level","item_multiplier","book_multiplier","Step","step","Badge","pill","variant","is_curse","sacrificeItem","resultingItem","stepCost","instance","worker","presets","clear","data","helmet","helmet_preset","chestplate","chestplate_preset","leggings","leggings_preset","boots","boots_preset","sword_sharpness","sword_sharpness_preset","pickaxe_fortune","pickaxe_fortune_preset","pickaxe_silk_touch","pickaxe_silk_touch_preset","bow","bow_preset","App","items_to_combine","results","steps","status","nextIndex","to_combine_item_type","reduce","setState","terminate","combineItemsExecute","then","itemToAdd","new_items_to_combine","combineAndSetState","Object","entries","entry","preset","length","item_index","target","modifiedItem","valueAsNumber","sort","item_a","item_b","enchantmentName","getEnchantmentMaxLevel","filter_enchantment","xl","getAddOptions","changeItemToAdd","Button","addItem","getPresetOptions","changePreset","setPreset","deleteItem","addEnchantment","deleteEnchantment","changeEnchantmentToAdd","changeEchantmentToAdd","changeEnchantmentLevel","changeItemPenalty","cost","total","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ea6bf12a.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"combineItemsExecute\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"a5bc214952b6f02d50d2.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import enchantments from \"../data/enchantments.json\";\n\nconst numToNumeral = (num) => {\n  switch (num) {\n    case 1:\n      return \"I\";\n    case 2:\n      return \"II\";\n    case 3:\n      return \"III\";\n    case 4:\n      return \"IV\";\n    case 5:\n      return \"V\";\n    default:\n      return \"Numeral Error\";\n  }\n};\n\nconst levelToExperience = (level) => {\n  if (level < 17) {\n    return Math.pow(level, 2) + 6 * level;\n  } else if (level < 31) {\n    return 2.5 * Math.pow(level, 2) - 40.5 * level + 360;\n  } else {\n    return 4.5 * Math.pow(level, 2) - 162.5 * level + 2220;\n  }\n};\n\nconst addIndexes = (arrayToIndex) => {\n  return arrayToIndex.map((item, index) => {\n    return { ...item, index: index };\n  });\n};\n\nconst getEnchantmentDisplayName = (enchantment_name) => {\n  const enchantment_data = enchantments.find(\n    (find_enchantment) => find_enchantment.name === enchantment_name\n  );\n  return enchantment_data ? enchantment_data.display_name : null;\n};\n\nexport {\n  numToNumeral,\n  levelToExperience,\n  addIndexes,\n  getEnchantmentDisplayName,\n};\n","import enchantments from \"../data/enchantments.json\";\nimport { levelToExperience } from \"../utils/helpers\";\nimport items from \"../data/items.json\";\n\nconst getEnchantments = (item) => {\n  return enchantments.filter((enchantment) =>\n    enchantment.applies_to.some((possible_item) => possible_item === item)\n  );\n};\n\nconst getItemData = (item) => {\n  const new_item = { ...item };\n  new_item.enchantments = new_item.enchantments.map((enchantment) => {\n    return {\n      ...enchantment,\n      ...enchantments.find(\n        (enchantment_data) => enchantment_data.name === enchantment.name\n      ),\n    };\n  });\n  return new_item;\n};\n\nconst checkEnchantmentIsCompatible = (targetItem, newEnchantment) => {\n  return (\n    // There isn't an existing enchantment in a mutal exclusion group\n    !targetItem.enchantments.some(\n      (some_enchantment) =>\n        some_enchantment.name !== newEnchantment.name &&\n        some_enchantment.group &&\n        newEnchantment.group &&\n        some_enchantment.group === newEnchantment.group &&\n        !(\n          some_enchantment.group_exception &&\n          newEnchantment.group_exception &&\n          some_enchantment.group_exception === newEnchantment.group_exception\n        ) // Rule exception for tridents\n    ) &&\n    //Possible enchantment is applicable to the given item\n    (newEnchantment.applies_to.some(\n      (some_item) => some_item === targetItem.name\n    ) ||\n      targetItem.name === \"book\")\n  );\n};\n\nconst mergeEnchantments = (\n  sacrificeItem,\n  targetEnchantments,\n  sacrificeEnchantments //mutable\n) => {\n  return sacrificeEnchantments.reduce(\n    (mergeResults, sacrificeEnchantment) => {\n      const multiplier =\n        sacrificeItem.name === \"book\"\n          ? sacrificeEnchantment.book_multiplier\n          : sacrificeEnchantment.item_multiplier;\n\n      // Find if target already has enchantment\n      const matchedEnchantment = mergeResults.resultingEnchantments.find(\n        (resultingEnchantment) =>\n          resultingEnchantment.name === sacrificeEnchantment.name\n      );\n      let newLevel = sacrificeEnchantment.level;\n      // Enchantment matched. Check Level.\n      if (matchedEnchantment) {\n        // Make a copy of the matched enchantment.\n        const newMatchedEnchantment = { ...matchedEnchantment };\n        let levelDifference =\n          sacrificeEnchantment.level - newMatchedEnchantment.level;\n        // Levels are the same. Bump level.\n        if (levelDifference === 0) {\n          levelDifference += 1;\n          newLevel += 1;\n        }\n        if (levelDifference > 0) {\n          mergeResults.cost += levelDifference * multiplier;\n          newMatchedEnchantment.level = newLevel;\n          // Remove old enchantment and replace with new copy\n          mergeResults.resultingEnchantments = [\n            ...mergeResults.resultingEnchantments.filter(\n              (filtered_enchantment) =>\n                filtered_enchantment.name !== newMatchedEnchantment.name\n            ),\n            newMatchedEnchantment,\n          ];\n        }\n      } else {\n        // New enchantment. Add.\n        mergeResults.resultingEnchantments = [\n          ...mergeResults.resultingEnchantments,\n          sacrificeEnchantment,\n        ];\n        mergeResults.cost += newLevel * multiplier;\n      }\n      return mergeResults;\n    },\n    { cost: 0, resultingEnchantments: [...targetEnchantments] }\n  );\n};\n\nconst anvil = (targetItem, sacrificeItem) => {\n  const targetPenalty = targetItem.penalty || 0;\n  const sacrificePenalty = sacrificeItem.penalty || 0;\n  // Filter non-applicable enchantments\n  const filtered_enchantments = sacrificeItem.enchantments.filter(\n    (enchantment) => checkEnchantmentIsCompatible(targetItem, enchantment)\n  );\n  const mergeResults = mergeEnchantments(\n    sacrificeItem,\n    targetItem.enchantments,\n    filtered_enchantments\n  );\n  const resultingItem = {\n    ...targetItem,\n    enchantments: mergeResults.resultingEnchantments,\n  };\n  const stepCost =\n    mergeResults.cost +\n    Math.pow(2, targetPenalty) -\n    1 +\n    Math.pow(2, sacrificePenalty) -\n    1;\n  resultingItem.penalty = Math.max(targetPenalty, sacrificePenalty) + 1;\n  const results = {\n    resultingItem: resultingItem,\n    cost: stepCost,\n    exp: levelToExperience(stepCost),\n    steps: [\n      {\n        targetItem: targetItem,\n        sacrificeItem: sacrificeItem,\n        resultingItem: resultingItem,\n        stepCost: stepCost,\n      },\n    ],\n  };\n  return results;\n};\n\nconst combineItems = (items) => {\n  items = items.map(getItemData);\n\n  //For each item, determine what can be combined into it, use anvil, then call combineItems with what remains\n  let allResults = [];\n  items.forEach((targetItem) => {\n    const nonTargets = items.filter(\n      (sacrificeItem) => sacrificeItem !== targetItem\n    );\n    let eligibleItems = nonTargets.filter(\n      (sacrificeItem) =>\n        sacrificeItem.name === \"book\" || targetItem.name !== \"book\"\n    );\n\n    if (eligibleItems.length > 0) {\n      //Optimize - if book -> book, choose cheapest book\n      if (targetItem.name === \"book\") {\n        eligibleItems = [\n          eligibleItems.reduce((cheapestBook, item) => {\n            return mergeEnchantments(\n              item,\n              targetItem.enchantments,\n              item.enchantments\n            ).cost <\n              mergeEnchantments(\n                cheapestBook,\n                targetItem.enchantments,\n                cheapestBook.enchantments\n              ).cost\n              ? item\n              : cheapestBook;\n          }, eligibleItems[0]),\n        ];\n      }\n      //For each eligible item\n      eligibleItems.forEach((sacrificeItem) => {\n        let anvilResults = anvil(targetItem, sacrificeItem);\n        const remaining_items = nonTargets.filter(\n          (item) => item !== sacrificeItem\n        );\n\n        if (remaining_items.length > 0) {\n          const remaining_items_results = combineItems([\n            anvilResults.resultingItem,\n            ...remaining_items,\n          ]);\n\n          anvilResults.resultingItem = remaining_items_results.resultingItem;\n          anvilResults.cost += remaining_items_results.cost;\n          anvilResults.exp += remaining_items_results.exp;\n          anvilResults.steps = [\n            ...anvilResults.steps,\n            ...remaining_items_results.steps,\n          ];\n        }\n        allResults = [...allResults, anvilResults];\n      });\n    }\n  });\n\n  //Get the cheapest results\n  if (allResults.length > 0) {\n    return allResults.reduce((cheapestResults, singleResult) => {\n      return singleResult.exp < cheapestResults.exp\n        ? singleResult\n        : cheapestResults;\n    }, allResults[0]);\n  } else {\n    return { targetItem: items[0], steps: [], status: \"No items to combine\" };\n  }\n};\n\nconst getDisplayName = (item_name) => {\n  const item_data = items.find((find_item) => find_item.name === item_name);\n  return item_data ? item_data.display_name : null;\n};\n\nexport {\n  getEnchantments,\n  getItemData,\n  checkEnchantmentIsCompatible,\n  combineItems,\n  getDisplayName,\n};\n","import React from \"react\";\n\nclass Icon extends React.PureComponent {\n  render() {\n    const { name, size } = this.props;\n    return (\n      <img\n        src={`${process.env.PUBLIC_URL}/item_images/${name}.png`}\n        alt={name}\n        width={size}\n        height={size}\n      />\n    );\n  }\n}\n\nexport default Icon;\n","import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport enchantments from \"../data/enchantments.json\";\nimport Select from \"react-select\";\nimport { checkEnchantmentIsCompatible, getDisplayName } from \"../utils/item\";\nimport { getEnchantmentDisplayName } from \"../utils/helpers\";\nimport Icon from \"./icon\";\n\nconst smallerSelect = {\n  control: (provided, state) => ({\n    ...provided,\n    minHeight: \"31px\",\n    height: \"31px\",\n  }),\n  input: (provided, state) => ({\n    ...provided,\n    margin: \"0px\",\n  }),\n  indicatorsContainer: (provided, state) => ({\n    ...provided,\n    height: \"31px\",\n  }),\n};\n\nclass Item extends React.PureComponent {\n  getPossibleEnchantmentOptions(item) {\n    return enchantments\n      .filter(\n        (filtered_enchantment) =>\n          !item.enchantments.some(\n            (some_enchantment) =>\n              some_enchantment.name === filtered_enchantment.name\n          ) && checkEnchantmentIsCompatible(item, filtered_enchantment)\n      )\n      .map((enchantment) => {\n        return {\n          value: enchantment.name,\n          label: getEnchantmentDisplayName(enchantment.name),\n        };\n      });\n  }\n\n  render() {\n    const {\n      item,\n      onDelete,\n      onAddEnchantment,\n      onDeleteEnchantment,\n      onChangeLevel,\n      onChangePenalty,\n    } = this.props;\n\n    return (\n      <Container>\n        <Row>\n          <Col sm=\"auto\">\n            <Container fluid>\n              <Row className=\"align-items-center\">\n                <Col xs=\"1\">\n                  <Icon name={item.name} size={32} />\n                </Col>\n                <Col xs=\"5\">\n                  <h2>{getDisplayName(item.name)}</h2>\n                </Col>\n                <Col>\n                  <button onClick={onDelete} className=\"close\">\n                    ×\n                  </button>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>Penalty</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      type=\"number\"\n                      value={item.penalty || 0}\n                      min=\"0\"\n                      onChange={(e) => onChangePenalty(e, item.index)}\n                    />\n                  </InputGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Select\n                    options={this.getPossibleEnchantmentOptions(item)}\n                    onChange={(e) => onAddEnchantment(e)}\n                    placeholder=\"Add enchantments...\"\n                    styles={smallerSelect}\n                  />\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n          <Col>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Enchantment</th>\n                  <th>Level</th>\n                  <th>Item Multiplier</th>\n                  <th>Book Multiplier</th>\n                </tr>\n              </thead>\n              <tbody>\n                {item.enchantments.map((enchantment, index) => (\n                  <tr key={index}>\n                    <td>{getEnchantmentDisplayName(enchantment.name)}</td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        value={enchantment.level}\n                        min=\"1\"\n                        max={enchantment.max_level}\n                        onChange={(e) => onChangeLevel(e, enchantment)}\n                      />\n                    </td>\n                    <td>{enchantment.item_multiplier}</td>\n                    <td>{enchantment.book_multiplier}</td>\n                    <td>\n                      <button\n                        onClick={() => onDeleteEnchantment(enchantment)}\n                        className=\"close\"\n                      >\n                        ×\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Item;\n","import React from \"react\";\nimport { Container, Row, Badge } from \"react-bootstrap\";\nimport {\n  numToNumeral,\n  levelToExperience,\n  getEnchantmentDisplayName,\n} from \"../utils/helpers\";\nimport { getDisplayName } from \"../utils/item\";\nimport Icon from \"./icon\";\n\nclass Step extends React.PureComponent {\n  render() {\n    const { step } = this.props;\n    return (\n      <tr>\n        <td>\n          <Container>\n            <Row>\n              <Icon name={step.targetItem.name} size={16} />\n              {getDisplayName(step.targetItem.name)}\n              <Badge pill variant=\"warning\">\n                {step.targetItem.penalty}\n              </Badge>\n            </Row>\n            <Row>\n              {step.targetItem.enchantments.map((enchantment, index) => {\n                return (\n                  <Badge\n                    key={index}\n                    pill\n                    variant={enchantment.is_curse ? \"danger\" : \"primary\"}\n                  >\n                    {getEnchantmentDisplayName(enchantment.name)}{\" \"}\n                    {numToNumeral(enchantment.level)}\n                  </Badge>\n                );\n              })}\n            </Row>\n          </Container>\n        </td>\n        <td>\n          <Container>\n            <Row>\n              <Icon name={step.sacrificeItem.name} size={16} />\n              {getDisplayName(step.sacrificeItem.name)}\n              <Badge pill variant=\"warning\">\n                {step.sacrificeItem.penalty}\n              </Badge>\n            </Row>\n            <Row>\n              {step.sacrificeItem.enchantments.map((enchantment, index) => {\n                return (\n                  <Badge\n                    key={index}\n                    pill\n                    variant={enchantment.is_curse ? \"danger\" : \"primary\"}\n                  >\n                    {getEnchantmentDisplayName(enchantment.name)}{\" \"}\n                    {numToNumeral(enchantment.level)}\n                  </Badge>\n                );\n              })}\n            </Row>\n          </Container>\n        </td>\n        <td>\n          <Container>\n            <Row>\n              <Icon name={step.resultingItem.name} size={16} />\n              {getDisplayName(step.resultingItem.name)}\n              <Badge pill variant=\"warning\">\n                {step.resultingItem.penalty}\n              </Badge>\n            </Row>\n            <Row>\n              {step.resultingItem.enchantments.map((enchantment, index) => {\n                return (\n                  <Badge\n                    key={index}\n                    pill\n                    variant={enchantment.is_curse ? \"danger\" : \"primary\"}\n                  >\n                    {getEnchantmentDisplayName(enchantment.name)}{\" \"}\n                    {numToNumeral(enchantment.level)}\n                  </Badge>\n                );\n              })}\n            </Row>\n          </Container>\n        </td>\n        <td>{step.stepCost}</td>\n        <td>{levelToExperience(step.stepCost)}</td>\n      </tr>\n    );\n  }\n}\n\nexport default Step;\n","import React from \"react\";\nimport \"./App.scss\";\n\nimport items from \"./data/items.json\";\nimport enchantments from \"./data/enchantments.json\";\nimport Item from \"./components/item\";\nimport Step from \"./components/step\";\nimport { getItemData, getDisplayName } from \"./utils/item\";\n//import { combineItems } from \"./utils/item\"; //for debugging\nimport worker from \"workerize-loader!./utils/worker.js\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport { Container, Row, Col, Table, Button } from \"react-bootstrap\";\nimport { levelToExperience, addIndexes } from \"./utils/helpers\";\nimport Select from \"react-select\";\n\n// Presets\nimport helmet_preset from \"./data/helmet_preset.json\";\nimport chestplate_preset from \"./data/chestplate_preset.json\";\nimport leggings_preset from \"./data/leggings_preset.json\";\nimport boots_preset from \"./data/boots_preset.json\";\nimport sword_sharpness_preset from \"./data/sword_sharpness_preset.json\";\nimport pickaxe_fortune_preset from \"./data/pickaxe_fortune_preset.json\";\nimport pickaxe_silk_touch_preset from \"./data/pickaxe_silk_touch_preset.json\";\nimport bow_preset from \"./data/bow_preset.json\";\n\nlet instance = worker();\nconst presets = {\n  clear: { data: [], display_name: \"Clear\" },\n  helmet: { data: helmet_preset, display_name: \"Helmet\" },\n  chestplate: { data: chestplate_preset, display_name: \"Chestplate\" },\n  leggings: { data: leggings_preset, display_name: \"Leggings\" },\n  boots: { data: boots_preset, display_name: \"Boots\" },\n  sword_sharpness: {\n    data: sword_sharpness_preset,\n    display_name: \"Sword (Sharpness)\",\n  },\n  pickaxe_fortune: {\n    data: pickaxe_fortune_preset,\n    display_name: \"Pickaxe (Fortune)\",\n  },\n  pickaxe_silk_touch: {\n    data: pickaxe_silk_touch_preset,\n    display_name: \"Pickaxe (Silk Touch)\",\n  },\n  bow: { data: bow_preset, display_name: \"Bow\" },\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items_to_combine: [],\n      results: { targetItem: {}, steps: [], status: \"No items to combine\" },\n      nextIndex: 0,\n    };\n  }\n\n  getAddOptions() {\n    // e.g., if boots is in items_to_combine, the type is boots\n    const to_combine_item_type = this.state.items_to_combine.reduce(\n      (type, item) => {\n        return type || item.name === \"book\" ? type : item.name;\n      },\n      null\n    );\n    // Include if there is no type, the type matches, or if it's a book\n    const filtered_items = items.filter((item) => {\n      return (\n        !to_combine_item_type ||\n        item.name === to_combine_item_type ||\n        item.name === \"book\"\n      );\n    });\n    return filtered_items.map((item) => {\n      return { value: item.name, label: getDisplayName(item.name) };\n    });\n  }\n\n  // componentDidMount() {\n  //   //Preload preset\n  //   // this.setState({ items_to_combine: addIndexes(helmet_preset) });\n  //   // this.combineAndSetState(addIndexes(helmet_preset));\n\n  //   //Use the following line to debug (no worker)\n  //   // combineItems(sword_sharpness_preset);\n  // }\n\n  combineAndSetState(items_to_combine) {\n    this.setState({\n      results: { targetItem: {}, steps: [], status: \"Loading...\" },\n    });\n    instance.terminate();\n    instance = worker();\n    instance.combineItemsExecute(items_to_combine).then((results) => {\n      this.setState({ results: results });\n    });\n  }\n\n  changeItemToAdd(e) {\n    this.setState({\n      itemToAdd: e.value,\n    });\n  }\n\n  addItem() {\n    if (this.state.itemToAdd) {\n      const new_items_to_combine = [\n        ...this.state.items_to_combine,\n        {\n          name: this.state.itemToAdd,\n          enchantments: [],\n          index: this.state.nextIndex,\n        },\n      ];\n      this.setState({\n        items_to_combine: new_items_to_combine,\n        nextIndex: this.state.nextIndex + 1,\n      });\n      this.combineAndSetState(new_items_to_combine);\n    }\n  }\n\n  deleteItem(index) {\n    const new_items_to_combine = this.state.items_to_combine.filter(\n      (item) => item.index !== index\n    );\n    this.setState({\n      items_to_combine: new_items_to_combine,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  getPresetOptions() {\n    return Object.entries(presets).map((entry) => {\n      return { value: entry[0], label: entry[1].display_name };\n    });\n  }\n\n  changePreset(e) {\n    this.setState({\n      preset: e.value,\n    });\n  }\n\n  setPreset() {\n    const new_items_to_combine = addIndexes(presets[this.state.preset].data);\n    this.setState({\n      items_to_combine: new_items_to_combine,\n      nextIndex: new_items_to_combine.length,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  changeItemPenalty(e, item_index) {\n    if (!e.target) {\n      return;\n    }\n    let new_items_to_combine = [...this.state.items_to_combine];\n    const modifiedItem = new_items_to_combine.find(\n      (item) => item.index === item_index\n    );\n    modifiedItem.penalty = e.target.valueAsNumber;\n    new_items_to_combine = [\n      ...new_items_to_combine.filter((item) => item.index !== item_index),\n      modifiedItem,\n    ];\n    new_items_to_combine.sort((item_a, item_b) => item_a.index - item_b.index);\n    this.setState({\n      items_to_combine: new_items_to_combine,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  getEnchantmentMaxLevel(enchantmentName) {\n    return enchantments.find(\n      (enchantment) => enchantment.name === enchantmentName\n    ).max_level;\n  }\n\n  addEnchantment(e, item_index) {\n    const new_items_to_combine = [...this.state.items_to_combine];\n    const new_item = new_items_to_combine.find(\n      (item) => item.index === item_index\n    );\n    if (e.value) {\n      new_item.enchantments = [\n        ...new_item.enchantments,\n        {\n          name: e.value,\n          level: this.getEnchantmentMaxLevel(e.value),\n        },\n      ];\n      this.setState({\n        items_to_combine: new_items_to_combine,\n      });\n      this.combineAndSetState(new_items_to_combine);\n    }\n  }\n\n  deleteEnchantment(item_index, enchantment) {\n    const new_items_to_combine = [...this.state.items_to_combine];\n    const new_item = new_items_to_combine.find(\n      (item) => item.index === item_index\n    );\n    new_item.enchantments = new_item.enchantments.filter(\n      (filter_enchantment) => filter_enchantment.name !== enchantment.name\n    );\n    this.setState({\n      items_to_combine: new_items_to_combine,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  changeEnchantmentLevel(e, item_index, enchantment) {\n    if (!e.target) {\n      return;\n    }\n    const new_items_to_combine = [...this.state.items_to_combine];\n    const new_item = new_items_to_combine.find(\n      (item) => item.index === item_index\n    );\n    const new_enchantment = new_item.enchantments.find(\n      (find_enchantment) => find_enchantment.name === enchantment.name\n    );\n    new_enchantment.level = e.target.valueAsNumber;\n    this.setState({\n      items_to_combine: new_items_to_combine,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  render() {\n    const { results, items_to_combine } = this.state;\n    return (\n      <div className=\"App\">\n        <Container fluid>\n          <Row xl=\"auto\">\n            <Col xs=\"4\" xl=\"2\">\n              <Select\n                options={this.getAddOptions()}\n                onChange={(e) => this.changeItemToAdd(e)}\n                placeholder=\"Items...\"\n              />\n            </Col>\n            <Col xs=\"2\" xl=\"1\">\n              <Button variant=\"outline-primary\" onClick={() => this.addItem()}>\n                Add\n              </Button>\n            </Col>\n            <Col xs=\"4\" xl=\"2\">\n              <Select\n                options={this.getPresetOptions()}\n                onChange={(e) => this.changePreset(e)}\n                placeholder=\"Presets...\"\n              />\n            </Col>\n            <Col xs=\"2\" xl=\"1\">\n              <Button\n                variant=\"outline-primary\"\n                onClick={() => this.setPreset()}\n              >\n                Select Preset\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"auto\">\n              {items_to_combine.map((item) => {\n                return (\n                  <Item\n                    item={getItemData(item)}\n                    key={item.index}\n                    onDelete={() => this.deleteItem(item.index)}\n                    onAddEnchantment={(e) => this.addEnchantment(e, item.index)}\n                    onDeleteEnchantment={(enchantment) =>\n                      this.deleteEnchantment(item.index, enchantment)\n                    }\n                    changeEnchantmentToAdd={(e) =>\n                      this.changeEchantmentToAdd(e, item.index)\n                    }\n                    onChangeLevel={(e, enchantment) =>\n                      this.changeEnchantmentLevel(e, item.index, enchantment)\n                    }\n                    onChangePenalty={(e) =>\n                      this.changeItemPenalty(e, item.index)\n                    }\n                  ></Item>\n                );\n              })}\n            </Col>\n            <Col xs=\"6\">\n              <h3>Results</h3>\n              <p>{results.status}</p>\n              <p>Total Levels: {results.cost}</p>\n              <p>\n                Total Experience:{\" \"}\n                {results.steps.reduce(\n                  (total, step) => total + levelToExperience(step.stepCost),\n                  0\n                )}\n              </p>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Target</th>\n                    <th>Sacrifice</th>\n                    <th>Result</th>\n                    <th>Step Cost</th>\n                    <th>Step Experience</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {results.steps.map((step, index) => {\n                    return <Step step={step} key={index} />;\n                  })}\n                </tbody>\n              </Table>\n              {/* <p>{`Result JSON: ${JSON.stringify(results)}`}</p> */}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}