{"version":3,"sources":["utils/worker.js","utils/helpers.js","utils/item.js","components/item.js","components/step.js","App.js","serviceWorker.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","numToNumeral","num","levelToExperience","level","Math","pow","getItemData","item","new_item","enchantments","map","enchantment","find","enchantment_data","checkEnchantmentIsCompatible","targetItem","newEnchantment","some","some_enchantment","group","group_exception","applies_to","some_item","smallerSelect","control","provided","state","minHeight","height","input","margin","indicatorsContainer","Item","existingEnchantments","enabled","possibleEnchantments","filter","filtered_enchantment","max_level","value","label","this","props","onDelete","onAddEnchantment","onDeleteEnchantment","onChangeLevel","onChangePenalty","Container","fluid","Row","Col","xs","className","onClick","InputGroup","size","Prepend","Text","FormControl","type","penalty","min","onChange","e","index","options","getPossibleEnchantmentOptions","placeholder","enchantmentToAdd","styles","Table","key","max","item_multiplier","book_multiplier","React","PureComponent","Step","step","Badge","pill","variant","is_curse","sacrificeItem","resultingItem","stepCost","instance","worker","presets","reset","helmet","helmet_preset","chestplate","chestplate_preset","leggings","leggings_preset","boots","boots_preset","sword_sharpness","sword_sharpness_preset","pickaxe_fortune","pickaxe_fortune_preset","pickaxe_silk_touch","pickaxe_silk_touch_preset","bow","bow_preset","App","items_to_combine","results","steps","status","nextIndex","to_combine_item_type","reduce","items","setState","terminate","combineItemsExecute","then","itemToAdd","new_items_to_combine","combineAndSetState","Object","entries","entry","preset","length","item_index","target","modifiedItem","valueAsNumber","sort","item_a","item_b","enchantmentName","getEnchantmentMaxLevel","filter_enchantment","find_enchantment","getAddOptions","changeItemToAdd","Button","addItem","getPresetOptions","changePreset","setPreset","deleteItem","addEnchantment","deleteEnchantment","changeEnchantmentToAdd","changeEchantmentToAdd","changeEnchantmentLevel","changeItemPenalty","cost","total","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.520037a5.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"combineItemsExecute\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"5905929dfbeec5dec30c.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","const numToNumeral = (num) => {\n  switch (num) {\n    case 1:\n      return \"I\";\n    case 2:\n      return \"II\";\n    case 3:\n      return \"III\";\n    case 4:\n      return \"IV\";\n    case 5:\n      return \"V\";\n    default:\n      return \"Numeral Error\";\n  }\n};\n\nconst levelToExperience = (level) => {\n  if (level < 17) {\n    return Math.pow(level, 2) + 6 * level;\n  } else if (level < 31) {\n    return 2.5 * Math.pow(level, 2) - 40.5 * level + 360;\n  } else {\n    return 4.5 * Math.pow(level, 2) - 162.5 * level + 2220;\n  }\n};\n\nconst addIndexes = (arrayToIndex) => {\n  return arrayToIndex.map((item, index) => {\n    return { ...item, index: index };\n  });\n};\n\nexport { numToNumeral, levelToExperience, addIndexes };\n","import enchantments from \"../data/enchantments.json\";\nimport { levelToExperience } from \"../utils/helpers\";\n\nconst getEnchantments = (item) => {\n  return enchantments.filter((enchantment) =>\n    enchantment.applies_to.some((possible_item) => possible_item === item)\n  );\n};\n\nconst getItemData = (item) => {\n  const new_item = { ...item };\n  new_item.enchantments = new_item.enchantments.map((enchantment) => {\n    return {\n      ...enchantment,\n      ...enchantments.find(\n        (enchantment_data) => enchantment_data.name === enchantment.name\n      ),\n    };\n  });\n  return new_item;\n};\n\nconst checkEnchantmentIsCompatible = (targetItem, newEnchantment) => {\n  return (\n    // There isn't an existing enchantment in a mutal exclusion group\n    !targetItem.enchantments.some(\n      (some_enchantment) =>\n        some_enchantment.name !== newEnchantment.name &&\n        some_enchantment.group &&\n        newEnchantment.group &&\n        some_enchantment.group === newEnchantment.group &&\n        !(\n          some_enchantment.group_exception &&\n          newEnchantment.group_exception &&\n          some_enchantment.group_exception === newEnchantment.group_exception\n        ) // Rule exception for tridents\n    ) &&\n    //Possible enchantment is applicable to the given item\n    newEnchantment.applies_to.some(\n      (some_item) => some_item === targetItem.name || targetItem.name === \"book\"\n    )\n  );\n};\n\nconst mergeEnchantments = (sacrificeItem, targetEnchantments) => {\n  return sacrificeItem.enchantments.reduce(\n    (mergeResults, sacrificeEnchantment) => {\n      const multiplier =\n        sacrificeItem.name === \"book\"\n          ? sacrificeEnchantment.book_multiplier\n          : sacrificeEnchantment.item_multiplier;\n\n      // Find if target already has enchantment\n      const matchedEnchantment = mergeResults.resultingEnchantments.find(\n        (resultingEnchantment) =>\n          resultingEnchantment.name === sacrificeEnchantment.name\n      );\n      let newLevel = sacrificeEnchantment.level;\n      // Enchantment matched. Check Level.\n      if (matchedEnchantment) {\n        // Make a copy of the matched enchantment.\n        const newMatchedEnchantment = { ...matchedEnchantment };\n        let levelDifference =\n          sacrificeEnchantment.level - newMatchedEnchantment.level;\n        // Levels are the same. Bump level.\n        if (levelDifference === 0) {\n          levelDifference += 1;\n          newLevel += 1;\n        }\n        if (levelDifference > 0) {\n          mergeResults.cost += levelDifference * multiplier;\n          newMatchedEnchantment.level = newLevel;\n          // Remove old enchantment and replace with new copy\n          mergeResults.resultingEnchantments = [\n            ...mergeResults.resultingEnchantments.filter(\n              (filtered_enchantment) =>\n                filtered_enchantment.name !== newMatchedEnchantment.name\n            ),\n            newMatchedEnchantment,\n          ];\n        }\n      } else {\n        // New enchantment. Add.\n        mergeResults.resultingEnchantments = [\n          ...mergeResults.resultingEnchantments,\n          sacrificeEnchantment,\n        ];\n        mergeResults.cost += newLevel * multiplier;\n      }\n      return mergeResults;\n    },\n    { cost: 0, resultingEnchantments: [...targetEnchantments] }\n  );\n};\n\nconst anvil = (targetItem, sacrificeItem) => {\n  const targetPenalty = targetItem.penalty || 0;\n  const sacrificePenalty = sacrificeItem.penalty || 0;\n  // Filter non-applicable enchantments\n  const filtered_enchantments = sacrificeItem.enchantments.filter(\n    (enchantment) => checkEnchantmentIsCompatible(targetItem, enchantment)\n  );\n  const mergeResults = mergeEnchantments(\n    sacrificeItem,\n    targetItem.enchantments,\n    filtered_enchantments\n  );\n  const resultingItem = {\n    ...targetItem,\n    enchantments: mergeResults.resultingEnchantments,\n  };\n  const stepCost =\n    mergeResults.cost +\n    Math.pow(2, targetPenalty) -\n    1 +\n    Math.pow(2, sacrificePenalty) -\n    1;\n  resultingItem.penalty = Math.max(targetPenalty, sacrificePenalty) + 1;\n  const results = {\n    resultingItem: resultingItem,\n    cost: stepCost,\n    exp: levelToExperience(stepCost),\n    steps: [\n      {\n        targetItem: targetItem,\n        sacrificeItem: sacrificeItem,\n        resultingItem: resultingItem,\n        stepCost: stepCost,\n      },\n    ],\n  };\n  return results;\n};\n\nconst combineItems = (items) => {\n  items = items.map(getItemData);\n\n  //For each item, determine what can be combined into it, use anvil, then call combineItems with what remains\n  let allResults = [];\n  items.forEach((targetItem) => {\n    const nonTargets = items.filter(\n      (sacrificeItem) => sacrificeItem !== targetItem\n    );\n    let eligibleItems = nonTargets.filter(\n      (sacrificeItem) =>\n        sacrificeItem.name === \"book\" || targetItem.name !== \"book\"\n    );\n\n    if (eligibleItems.length > 0) {\n      //Optimize - if book -> book, choose cheapest book\n      if (targetItem.name === \"book\") {\n        eligibleItems = [\n          eligibleItems.reduce((cheapestBook, item) => {\n            return mergeEnchantments(item, targetItem.enchantments).cost <\n              mergeEnchantments(cheapestBook, targetItem.enchantments).cost\n              ? item\n              : cheapestBook;\n          }, eligibleItems[0]),\n        ];\n      }\n      //For each eligible item\n      eligibleItems.forEach((sacrificeItem) => {\n        let anvilResults = anvil(targetItem, sacrificeItem);\n        const remaining_items = nonTargets.filter(\n          (item) => item !== sacrificeItem\n        );\n\n        if (remaining_items.length > 0) {\n          const remaining_items_results = combineItems([\n            anvilResults.resultingItem,\n            ...remaining_items,\n          ]);\n\n          anvilResults.resultingItem = remaining_items_results.resultingItem;\n          anvilResults.cost += remaining_items_results.cost;\n          anvilResults.exp += remaining_items_results.exp;\n          anvilResults.steps = [\n            ...anvilResults.steps,\n            ...remaining_items_results.steps,\n          ];\n        }\n        allResults = [...allResults, anvilResults];\n      });\n    }\n  });\n\n  //Get the cheapest results\n  if (allResults.length > 0) {\n    return allResults.reduce((cheapestResults, singleResult) => {\n      return singleResult.exp < cheapestResults.exp\n        ? singleResult\n        : cheapestResults;\n    }, allResults[0]);\n  } else {\n    return { targetItem: items[0], steps: [], status: \"No items to combine\" };\n  }\n};\n\nexport {\n  getEnchantments,\n  getItemData,\n  checkEnchantmentIsCompatible,\n  combineItems,\n};\n","import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport enchantments from \"../data/enchantments.json\";\nimport Select from \"react-select\";\nimport { checkEnchantmentIsCompatible } from \"../utils/item\";\n\nconst smallerSelect = {\n  control: (provided, state) => ({\n    ...provided,\n    minHeight: \"31px\",\n    height: \"31px\",\n  }),\n  input: (provided, state) => ({\n    ...provided,\n    margin: \"0px\",\n  }),\n  indicatorsContainer: (provided, state) => ({\n    ...provided,\n    height: \"31px\",\n  }),\n};\n\nclass Item extends React.PureComponent {\n  addDisabledEnchantments(item) {\n    const existingEnchantments = item.enchantments.map((enchantment) => {\n      return { ...enchantment, enabled: true };\n    });\n    const possibleEnchantments = enchantments\n      .filter(\n        (filtered_enchantment) =>\n          //Possible enchantment is not in list of existing enchantments\n          !existingEnchantments.some(\n            (some_enchantment) =>\n              some_enchantment.name === filtered_enchantment.name\n          ) &&\n          //Possible enchantment is applicable to the given item\n          filtered_enchantment.applies_to.some(\n            (some_item) => some_item === item.name || item.name === \"book\"\n          )\n      )\n      .map((enchantment) => {\n        return { ...enchantment, level: enchantment.max_level, enabled: false };\n      });\n    return [...existingEnchantments, ...possibleEnchantments];\n  }\n\n  getPossibleEnchantmentOptions(item) {\n    return enchantments\n      .filter(\n        (filtered_enchantment) =>\n          !item.enchantments.some(\n            (some_enchantment) =>\n              some_enchantment.name === filtered_enchantment.name\n          ) && checkEnchantmentIsCompatible(item, filtered_enchantment)\n      )\n      .map((enchantment) => {\n        return { value: enchantment.name, label: enchantment.name };\n      });\n  }\n\n  render() {\n    const {\n      item,\n      onDelete,\n      onAddEnchantment,\n      onDeleteEnchantment,\n      onChangeLevel,\n      onChangePenalty,\n    } = this.props;\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col xs=\"4\">\n            <Container fluid>\n              <Row className=\"align-items-center\">\n                <Col xs=\"6\">\n                  <h2>{item.name}</h2>\n                </Col>\n                <Col>\n                  <button onClick={onDelete} className=\"close\">\n                    ×\n                  </button>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>Penalty</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      type=\"number\"\n                      value={item.penalty || 0}\n                      min=\"0\"\n                      onChange={(e) => onChangePenalty(e, item.index)}\n                    />\n                  </InputGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Select\n                    options={this.getPossibleEnchantmentOptions(item)}\n                    onChange={(e) => onAddEnchantment(e)}\n                    placeholder=\"Add enchantments...\"\n                    value={\n                      item.enchantmentToAdd\n                        ? {\n                            value: item.enchantmentToAdd,\n                            label: item.enchantmentToAdd,\n                          }\n                        : null\n                    }\n                    styles={smallerSelect}\n                  />\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n          <Col>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Enchantment</th>\n                  <th>Level</th>\n                  <th>Item Multiplier</th>\n                  <th>Book Multiplier</th>\n                </tr>\n              </thead>\n              <tbody>\n                {item.enchantments.map((enchantment, index) => (\n                  <tr key={index}>\n                    <td>{enchantment.name}</td>\n                    <td>\n                      <input\n                        type=\"number\"\n                        value={enchantment.level}\n                        min=\"1\"\n                        max={enchantment.max_level}\n                        onChange={(e) => onChangeLevel(e, enchantment)}\n                      />\n                    </td>\n                    <td>{enchantment.item_multiplier}</td>\n                    <td>{enchantment.book_multiplier}</td>\n                    <td>\n                      <button\n                        onClick={() => onDeleteEnchantment(enchantment)}\n                        className=\"close\"\n                      >\n                        ×\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Item;\n","import React from \"react\";\nimport { Container, Row, Badge } from \"react-bootstrap\";\nimport { numToNumeral, levelToExperience } from \"../utils/helpers\";\n\nclass Step extends React.PureComponent {\n  render() {\n    const { step } = this.props;\n    return (\n      <tr>\n        <td>\n          <Container>\n            <Row>\n              {step.targetItem.name}\n              <Badge pill variant=\"warning\">\n                {step.targetItem.penalty}\n              </Badge>\n            </Row>\n            <Row>\n              {step.targetItem.enchantments.map((enchantment, index) => {\n                return (\n                  <Badge\n                    key={index}\n                    pill\n                    variant={enchantment.is_curse ? \"danger\" : \"primary\"}\n                  >\n                    {enchantment.name} {numToNumeral(enchantment.level)}\n                  </Badge>\n                );\n              })}\n            </Row>\n          </Container>\n        </td>\n        <td>\n          <Container>\n            <Row>\n              {step.sacrificeItem.name}\n              <Badge pill variant=\"warning\">\n                {step.sacrificeItem.penalty}\n              </Badge>\n            </Row>\n            <Row>\n              {step.sacrificeItem.enchantments.map((enchantment, index) => {\n                return (\n                  <Badge\n                    key={index}\n                    pill\n                    variant={enchantment.is_curse ? \"danger\" : \"primary\"}\n                  >\n                    {enchantment.name} {numToNumeral(enchantment.level)}\n                  </Badge>\n                );\n              })}\n            </Row>\n          </Container>\n        </td>\n        <td>\n          <Container>\n            <Row>\n              {step.resultingItem.name}\n              <Badge pill variant=\"warning\">\n                {step.resultingItem.penalty}\n              </Badge>\n            </Row>\n            <Row>\n              {step.resultingItem.enchantments.map((enchantment, index) => {\n                return (\n                  <Badge\n                    key={index}\n                    pill\n                    variant={enchantment.is_curse ? \"danger\" : \"primary\"}\n                  >\n                    {enchantment.name} {numToNumeral(enchantment.level)}\n                  </Badge>\n                );\n              })}\n            </Row>\n          </Container>\n        </td>\n        <td>{step.stepCost}</td>\n        <td>{levelToExperience(step.stepCost)}</td>\n      </tr>\n    );\n  }\n}\n\nexport default Step;\n","import React from \"react\";\nimport \"./App.scss\";\n\nimport items from \"./data/items.json\";\nimport enchantments from \"./data/enchantments.json\";\nimport Item from \"./components/item\";\nimport Step from \"./components/step\";\nimport { getItemData } from \"./utils/item\";\n//import { combineItems } from \"./utils/item\"; //for debugging\nimport worker from \"workerize-loader!./utils/worker.js\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport { Container, Row, Col, Table, Button } from \"react-bootstrap\";\nimport { levelToExperience, addIndexes } from \"./utils/helpers\";\nimport Select from \"react-select\";\n\n// Presets\nimport helmet_preset from \"./data/helmet_preset.json\";\nimport chestplate_preset from \"./data/chestplate_preset.json\";\nimport leggings_preset from \"./data/leggings_preset.json\";\nimport boots_preset from \"./data/boots_preset.json\";\nimport sword_sharpness_preset from \"./data/sword_sharpness_preset.json\";\nimport pickaxe_fortune_preset from \"./data/pickaxe_fortune_preset.json\";\nimport pickaxe_silk_touch_preset from \"./data/pickaxe_silk_touch_preset.json\";\nimport bow_preset from \"./data/bow_preset.json\";\n\nlet instance = worker();\nconst presets = {\n  reset: [],\n  helmet: helmet_preset,\n  chestplate: chestplate_preset,\n  leggings: leggings_preset,\n  boots: boots_preset,\n  sword_sharpness: sword_sharpness_preset,\n  pickaxe_fortune: pickaxe_fortune_preset,\n  pickaxe_silk_touch: pickaxe_silk_touch_preset,\n  bow: bow_preset,\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items_to_combine: [],\n      results: { targetItem: {}, steps: [], status: \"No items to combine\" },\n      nextIndex: 0,\n    };\n  }\n\n  getAddOptions() {\n    // e.g., if boots is in items_to_combine, the type is boots\n    const to_combine_item_type = this.state.items_to_combine.reduce(\n      (type, item) => {\n        return type || item.name === \"book\" ? type : item.name;\n      },\n      null\n    );\n    // Include if there is no type, the type matches, or if it's a book\n    const filtered_items = items.filter((item) => {\n      return (\n        !to_combine_item_type ||\n        item === to_combine_item_type ||\n        item === \"book\"\n      );\n    });\n    return filtered_items.map((item) => {\n      return { value: item, label: item };\n    });\n  }\n\n  // componentDidMount() {\n  //   //Preload preset\n  //   // this.setState({ items_to_combine: addIndexes(helmet_preset) });\n  //   // this.combineAndSetState(addIndexes(helmet_preset));\n\n  //   //Use the following line to debug (no worker)\n  //   // combineItems(sword_sharpness_preset);\n  // }\n\n  combineAndSetState(items_to_combine) {\n    this.setState({\n      results: { targetItem: {}, steps: [], status: \"Loading...\" },\n    });\n    instance.terminate();\n    instance = worker();\n    instance.combineItemsExecute(items_to_combine).then((results) => {\n      this.setState({ results: results });\n    });\n  }\n\n  changeItemToAdd(e) {\n    this.setState({\n      itemToAdd: e.label,\n    });\n  }\n\n  addItem() {\n    if (this.state.itemToAdd) {\n      const new_items_to_combine = [\n        ...this.state.items_to_combine,\n        {\n          name: this.state.itemToAdd,\n          enchantments: [],\n          index: this.state.nextIndex,\n        },\n      ];\n      this.setState({\n        items_to_combine: new_items_to_combine,\n        nextIndex: this.state.nextIndex + 1,\n      });\n      this.combineAndSetState(new_items_to_combine);\n    }\n  }\n\n  deleteItem(index) {\n    const new_items_to_combine = this.state.items_to_combine.filter(\n      (item) => item.index !== index\n    );\n    this.setState({\n      items_to_combine: new_items_to_combine,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  getPresetOptions() {\n    return Object.entries(presets).map((entry) => {\n      return { value: entry[0], label: entry[0] };\n    });\n  }\n\n  changePreset(e) {\n    this.setState({\n      preset: e.label,\n    });\n  }\n\n  setPreset() {\n    const new_items_to_combine = addIndexes(presets[this.state.preset]);\n    this.setState({\n      items_to_combine: new_items_to_combine,\n      nextIndex: new_items_to_combine.length,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  changeItemPenalty(e, item_index) {\n    if (!e.target) {\n      return;\n    }\n    let new_items_to_combine = [...this.state.items_to_combine];\n    const modifiedItem = new_items_to_combine.find(\n      (item) => item.index === item_index\n    );\n    modifiedItem.penalty = e.target.valueAsNumber;\n    new_items_to_combine = [\n      ...new_items_to_combine.filter((item) => item.index !== item_index),\n      modifiedItem,\n    ];\n    new_items_to_combine.sort((item_a, item_b) => item_a.index - item_b.index);\n    this.setState({\n      items_to_combine: new_items_to_combine,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  getEnchantmentMaxLevel(enchantmentName) {\n    return enchantments.find(\n      (enchantment) => enchantment.name === enchantmentName\n    ).max_level;\n  }\n\n  addEnchantment(e, item_index) {\n    const new_items_to_combine = [...this.state.items_to_combine];\n    const new_item = new_items_to_combine.find(\n      (item) => item.index === item_index\n    );\n    if (e.label) {\n      new_item.enchantments = [\n        ...new_item.enchantments,\n        {\n          name: e.label,\n          level: this.getEnchantmentMaxLevel(e.label),\n        },\n      ];\n      this.setState({\n        items_to_combine: new_items_to_combine,\n      });\n      this.combineAndSetState(new_items_to_combine);\n    }\n  }\n\n  deleteEnchantment(item_index, enchantment) {\n    const new_items_to_combine = [...this.state.items_to_combine];\n    const new_item = new_items_to_combine.find(\n      (item) => item.index === item_index\n    );\n    new_item.enchantments = new_item.enchantments.filter(\n      (filter_enchantment) => filter_enchantment.name !== enchantment.name\n    );\n    this.setState({\n      items_to_combine: new_items_to_combine,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  changeEnchantmentLevel(e, item_index, enchantment) {\n    if (!e.target) {\n      return;\n    }\n    const new_items_to_combine = [...this.state.items_to_combine];\n    const new_item = new_items_to_combine.find(\n      (item) => item.index === item_index\n    );\n    const new_enchantment = new_item.enchantments.find(\n      (find_enchantment) => find_enchantment.name === enchantment.name\n    );\n    new_enchantment.level = e.target.valueAsNumber;\n    this.setState({\n      items_to_combine: new_items_to_combine,\n    });\n    this.combineAndSetState(new_items_to_combine);\n  }\n\n  render() {\n    const { results, items_to_combine } = this.state;\n    return (\n      <div className=\"App\">\n        <Container fluid>\n          <Row>\n            <Col xs=\"2\">\n              <Select\n                options={this.getAddOptions()}\n                onChange={(e) => this.changeItemToAdd(e)}\n                placeholder=\"Items...\"\n              />\n            </Col>\n            <Col xs=\"1\">\n              <Button variant=\"outline-primary\" onClick={() => this.addItem()}>\n                Add\n              </Button>\n            </Col>\n            <Col xs=\"2\">\n              <Select\n                options={this.getPresetOptions()}\n                onChange={(e) => this.changePreset(e)}\n                placeholder=\"Presets...\"\n              />\n            </Col>\n            <Col xs=\"2\">\n              <Button\n                variant=\"outline-primary\"\n                onClick={() => this.setPreset()}\n              >\n                Select Preset\n              </Button>\n            </Col>\n            <Col xs=\"6\"></Col>\n          </Row>\n          <Row>\n            <Col>\n              {items_to_combine.map((item) => {\n                return (\n                  <Item\n                    item={getItemData(item)}\n                    key={item.index}\n                    onDelete={() => this.deleteItem(item.index)}\n                    onAddEnchantment={(e) => this.addEnchantment(e, item.index)}\n                    onDeleteEnchantment={(enchantment) =>\n                      this.deleteEnchantment(item.index, enchantment)\n                    }\n                    changeEnchantmentToAdd={(e) =>\n                      this.changeEchantmentToAdd(e, item.index)\n                    }\n                    onChangeLevel={(e, enchantment) =>\n                      this.changeEnchantmentLevel(e, item.index, enchantment)\n                    }\n                    onChangePenalty={(e) =>\n                      this.changeItemPenalty(e, item.index)\n                    }\n                  ></Item>\n                );\n              })}\n            </Col>\n            <Col>\n              <h3>Results</h3>\n              <p>{results.status}</p>\n              <p>Total Levels: {results.cost}</p>\n              <p>\n                Total Experience:{\" \"}\n                {results.steps.reduce(\n                  (total, step) => total + levelToExperience(step.stepCost),\n                  0\n                )}\n              </p>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Target</th>\n                    <th>Sacrifice</th>\n                    <th>Result</th>\n                    <th>Step Cost</th>\n                    <th>Step Experience</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {results.steps.map((step, index) => {\n                    return <Step step={step} key={index} />;\n                  })}\n                </tbody>\n              </Table>\n              {/* <p>{`Result JSON: ${JSON.stringify(results)}`}</p> */}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}